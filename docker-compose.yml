version: "3.8"

services:
  backend:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      MONGODB_URL: mongodb://mongodb:27017
    networks:
      - app_network

  matching:
    build:
      context: ./matching-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      MONGODB_URL: mongodb://mongodb:27017
    networks:
      - app_network

  collabservice:
    build:
      context: ./collab-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      - backend
      - matching
      - collabservice
    environment:
      MATCHING_URL: http://matching:5000
      BACKEND_URL: http://backend:3000
      COLLAB_URL: ws://collabservice:8000
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app_network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
